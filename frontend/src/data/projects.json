[
  {
    "name": "Five in a Row",
    "text": "The React + TypeScript implementation of the famous and super classic board game. Two players can and must play simultaneously, there is no computer player included. You can register easily or if you don't want to, test accounts are also available to use with email: test1@test.com, password: test1pw, and with email: test2@test.com, password: test2pw. The whole authentication is supported by firebase. Local storage helps the users to stay logged in and store their game settings. The application is responsive so it can be played on mobile phones and tablets as well. Please note that the interface is not fully optimised yet for mobile devices.",
    "status": "complete",
    "type": "solo project",
    "stacks": [
      "html",
      "js",
      "typescript",
      "react",
      "oop",
      "sass",
      "bootstrap",
      "firebase"
    ],
    "gitUrl": "https://github.com/d3meter/five-in-a-row",
    "webUrl": "https://react-five-in-a-row.web.app/",
    "previewId": "five-in-a-row"
  },
  {
    "name": "Angular-TS challenge",
    "text": "It is a minimalist-designed Angular-Typescript application where registered users can read and share articles, follow eachother or mark articles as favorite. The authentication is Token-based (JWT). Please note that the backend server is owned by a third party so contents won't be displayed after starting frontend application. This project only represents my code base currently until I create an own backend.",
    "status": "complete",
    "type": "solo project",
    "stacks": [
      "html",
      "js",
      "angular",
      "typescript",
      "sass",
      "bootstrap",
      "rest",
      "jasmine",
      "token-auth",
      "jwt",
      "local-storage"
    ],
    "gitUrl": "https://github.com/d3meter/ui-challenge-frontend",
    "previewId": "angular-challenge"
  },
  {
    "name": "NASA Calendar",
    "text": "I used NASA-API to build my database. The landing page (main page) shows the last picture or video of the day from NASA. With clicking on the calendar icon of header it navigates the user to the calendar page. As default configuration the current month occures but the user can switch between the required years and months. As the data is fetched directly from the database the loading time is significantly reduced. When clicking on a day its detail page appears. There is more information about the current media and when clicking on it the HD content is opened in a new tab. At the moment Firebase is used for authentication complemented with some validation features such as password and email format check. In the future hosting and fire store will be integrated as well.",
    "status": "in progress",
    "type": "solo project",
    "stacks": [
      "html",
      "js",
      "react",
      "sass",
      "mui",
      "firebase"
    ],
    "gitUrl": "https://github.com/d3meter/nasa-calendar",
    "webUrl": "https://nasa-calendar.web.app/",
    "previewId": "nasa-calendar"
  },
  {
    "name": "Pizza order",
    "text": "A small team project in REACT from the bootcamp. It is a simple SPA pizza ordering site where orders are stored in separated JSON files (backend/data/orders) identified with auto-generated ids. I planned the UI/UX design in Figma, my main responsibilites were the inputs fields and their validation.",
    "status": "complete",
    "type": "bootcamp team project",
    "stacks": ["html", "react", "css", "express, nodejs, mockup"],
    "gitUrl": "https://github.com/d3meter/TEAMPROJ-REACT-pizza-order",
    "webUrl": "https://pizza-order-react.web.app/",
    "previewId": "pizza-order"
  }
]
